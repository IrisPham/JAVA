/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package chat.GUI;

import de.javasoft.plaf.synthetica.SyntheticaPlainLookAndFeel;
import java.awt.Color;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.io.PrintWriter;
import java.net.InetAddress;
import java.net.Socket;
import java.text.ParseException;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;

/**
 *
 * @author Visual-Studio
 */
public class login extends javax.swing.JFrame {
    Boolean isConnected = false; 
    private Socket sock_;
    private BufferedReader fromServer_;
    private PrintWriter sentServer_;
    private String sdt;
    private String mk;
    //String dsb;
    //JButton b;
    public login() {
        initComponents();
        getContentPane().setBackground(Color.white);
        jTextFielsDT.setText(fmRegis.sdt_);
        jTextFieldmatKhau.setText(fmRegis.mk_);
        setLocationRelativeTo(this);
        
    }    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jTextFielsDT = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jButtonloGin = new javax.swing.JButton();
        btnDangKi = new javax.swing.JButton();
        jTextFieldmatKhau = new javax.swing.JPasswordField();
        lbStatut = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Chào mừng bạn đến với CTU Talks");
        setBackground(javax.swing.UIManager.getDefaults().getColor("window"));

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Số điện thoại");

        jLabel2.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel2.setText("Mật khẩu");

        jTextFielsDT.setAutoscrolls(false);
        jTextFielsDT.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFielsDTKeyPressed(evt);
            }
        });

        jLabel3.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_chat_server/image/login.PNG"))); // NOI18N

        jButtonloGin.setFont(new java.awt.Font("Segoe UI", 1, 14)); // NOI18N
        jButtonloGin.setForeground(new java.awt.Color(255, 255, 255));
        jButtonloGin.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_chat_server/image/icon_Regis.png"))); // NOI18N
        jButtonloGin.setText("Đăng nhập");
        jButtonloGin.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        jButtonloGin.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonloGinActionPerformed(evt);
            }
        });

        btnDangKi.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        btnDangKi.setForeground(java.awt.Color.white);
        btnDangKi.setIcon(new javax.swing.ImageIcon(getClass().getResource("/project_chat_server/C-_Users_Visual-Studio_Desktop_Project_Chat_Client_src_project_chat_server_image_ULogin.png"))); // NOI18N
        btnDangKi.setText("Đăng kí");
        btnDangKi.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);
        btnDangKi.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDangKiActionPerformed(evt);
            }
        });

        jTextFieldmatKhau.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTextFieldmatKhauKeyPressed(evt);
            }
        });

        lbStatut.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addContainerGap()
                        .addComponent(jLabel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(20, 20, 20)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2)
                            .addComponent(jTextFielsDT, javax.swing.GroupLayout.DEFAULT_SIZE, 306, Short.MAX_VALUE)
                            .addComponent(jTextFieldmatKhau))
                        .addGap(0, 0, Short.MAX_VALUE)))
                .addContainerGap())
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(lbStatut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 80, javax.swing.GroupLayout.PREFERRED_SIZE))
            .addGroup(layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jButtonloGin, javax.swing.GroupLayout.PREFERRED_SIZE, 115, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 190, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 24, Short.MAX_VALUE)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFielsDT, javax.swing.GroupLayout.PREFERRED_SIZE, 31, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldmatKhau, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(jButtonloGin, javax.swing.GroupLayout.PREFERRED_SIZE, 36, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(btnDangKi, javax.swing.GroupLayout.PREFERRED_SIZE, 24, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(lbStatut, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addContainerGap())))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    private class Kiemtrataikhoan implements Runnable{
        @Override
        public void run() {
            String[] data = new String[2];
            String me;
            try {
                while ((me = fromServer_.readLine()) != null) {
                    //repLogin:OK
                    data = me.split(":");
                    break;
                }
                if(data[1].equals("OK")){
                    client Cl = new client(sock_,fromServer_,sentServer_,sdt,mk);
                    frmLoad frmLoad = new frmLoad(Cl);
                    frmLoad.setVisible(true);
                    Thread.interrupted();
                    closeFrame();
                }else{
                  if(data[1].equals("NO")){
                      System.out.println("Tài khoản sai or không tồn tại!");
                      lbStatut.setText("Tài khoản sai or không tồn tại!");
                      jTextFielsDT.setText("");
                      jTextFieldmatKhau.setText("");
                      jTextFielsDT.requestFocus();
                  }  
                }
            } catch (IOException ex) {
                JOptionPane.showConfirmDialog(rootPane,"Lỗi kết nối với máy chủ!");
            }
        }
        
    }
    private void closeFrame(){
        this.dispose();
    }
    private void jButtonloGinActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonloGinActionPerformed
//        if(jTextFielsDT.getText().equals("") || jTextFieldmatKhau.getText().equals("")){
//            jTextFielsDT.requestFocus();
//            lbStatut.setText("Không được để trống ô đăng nhập!");
//        }else{
            try {
//                InetAddress add = InetAddress.getByName("192.168.153.74");
//                System.out.println(add);
//                sock_ = new Socket(add,9999);
                sock_ = new Socket("localhost",9999);
                fromServer_ = new BufferedReader(new InputStreamReader(sock_.getInputStream()));
                sentServer_ = new PrintWriter(sock_.getOutputStream());
                sdt =  jTextFielsDT.getText();
//               "01639997154";
                mk = jTextFieldmatKhau.getText();
//                "HoaiAn"; jTextFieldmatKhau.getText();
                /*Kiểm tra xem tài khoản có hợp lệ không!*/
                Thread Listenner = new Thread(new Kiemtrataikhoan());
                Listenner.start();
                sentServer_.println("Connect:"+sdt+":"+mk);
                sentServer_.flush();
            } catch (IOException e) {
                JOptionPane.showConfirmDialog(this,"Lỗi khi kết nối đến Server");
            }  
//        }
    }//GEN-LAST:event_jButtonloGinActionPerformed

    private void btnDangKiActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDangKiActionPerformed
        
        this.dispose();
        fmRegis m = new fmRegis();
        m.setVisible(true);
        
    }//GEN-LAST:event_btnDangKiActionPerformed

    private void jTextFielsDTKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFielsDTKeyPressed
        if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            //        if(jTextFielsDT.getText().equals("") || jTextFieldmatKhau.getText().equals("")){
//            jTextFielsDT.requestFocus();
//            lbStatut.setText("Không được để trống ô đăng nhập!");
//        }else{
            try {
//                InetAddress add = InetAddress.getByName("192.168.153.74");
//                System.out.println(add);
//                sock_ = new Socket(add,9999);
                sock_ = new Socket("localhost",9999);
                fromServer_ = new BufferedReader(new InputStreamReader(sock_.getInputStream()));
                sentServer_ = new PrintWriter(sock_.getOutputStream());
                sdt =  jTextFielsDT.getText();
//               "01639997154";
                mk = "HoaiAn";
//                jTextFieldmatKhau.getText();
                /*Kiểm tra xem tài khoản có hợp lệ không!*/
                Thread Listenner = new Thread(new Kiemtrataikhoan());
                Listenner.start();
                sentServer_.println("Connect:"+sdt+":"+mk);
                sentServer_.flush();
            } catch (IOException e) {
                JOptionPane.showConfirmDialog(this,"Lỗi khi kết nối đến Server");
            }  
//        }
        }
                
    }//GEN-LAST:event_jTextFielsDTKeyPressed

    private void jTextFieldmatKhauKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTextFieldmatKhauKeyPressed
                if(evt.getKeyCode() == java.awt.event.KeyEvent.VK_ENTER){
            //        if(jTextFielsDT.getText().equals("") || jTextFieldmatKhau.getText().equals("")){
//            jTextFielsDT.requestFocus();
//            lbStatut.setText("Không được để trống ô đăng nhập!");
//        }else{
            try {
//                InetAddress add = InetAddress.getByName("192.168.153.74");
//                System.out.println(add);
//                sock_ = new Socket(add,9999);
                sock_ = new Socket("localhost",9999);
                fromServer_ = new BufferedReader(new InputStreamReader(sock_.getInputStream()));
                sentServer_ = new PrintWriter(sock_.getOutputStream());
                sdt =  jTextFielsDT.getText();
//               "01639997154";
                mk = "HoaiAn";
//                jTextFieldmatKhau.getText();
                /*Kiểm tra xem tài khoản có hợp lệ không!*/
                Thread Listenner = new Thread(new Kiemtrataikhoan());
                Listenner.start();
                sentServer_.println("Connect:"+sdt+":"+mk);
                sentServer_.flush();
            } catch (IOException e) {
                JOptionPane.showConfirmDialog(this,"Lỗi khi kết nối đến Server");
            }  
//        }
        }
    }//GEN-LAST:event_jTextFieldmatKhauKeyPressed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        try {
            UIManager.setLookAndFeel(new SyntheticaPlainLookAndFeel());
        } catch (ParseException | UnsupportedLookAndFeelException e) {
              e.printStackTrace();
        }
        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            @Override
            public void run() {
                new login().setVisible(true);
            }
        });
        
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnDangKi;
    private javax.swing.JButton jButtonloGin;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPasswordField jTextFieldmatKhau;
    private javax.swing.JTextField jTextFielsDT;
    private javax.swing.JLabel lbStatut;
    // End of variables declaration//GEN-END:variables
}
